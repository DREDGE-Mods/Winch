name: Release Build

on:
  push:
    branches: [master]
    paths-ignore:
      - "*.md"
      - "LICENSE"
      - ".gitignore"
  pull_request:
    branches: [master]
    types:
      - synchronize
      - labeled
    paths-ignore:
      - "*.md"
      - "LICENSE"
      - ".gitignore"

jobs:
  Build:
    if: ${{ github.ref == 'refs/heads/master' || contains(github.event.pull_request.labels.*.name, 'update-pr')  }}
    uses: ./.github/workflows/build.yml
    with:
      build_type: Release
  Update_Release:
    name: 'Create/Update Release Asset'
    needs: Build
    outputs:
      version: ${{ steps.version.outputs.prop }}
    if: ${{ github.ref != 'refs/heads/master' && contains(github.event.pull_request.labels.*.name, 'update-pr') }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Winch Asset
        uses: actions/download-artifact@v3
        with:
          name: Winch
          path: Winch

      - name: Zip Winch Asset
        run: |
          cd Winch/
          zip -r Winch.zip *
          mv Winch.zip ..
          cd ..
      
      - name: Download Example Mods
        uses: actions/download-artifact@v3
        with:
          name: Winch Examples
          path: Examples
      
      - name: Zip Example Mods
        run: |
          for mod in DisasterButton ExampleItems IntroSkipper
          do
            cd Examples/$mod/
            zip -r $mod.zip *
            mv $mod.zip ../..
            cd ../..
          done          
      - name: Upload Asset
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          commit: master
          tag: v${{ github.event.pull_request.title }}
          name: Version ${{ github.event.pull_request.title }}
          omitBodyDuringUpdate: true
          artifacts: Winch.zip, DisasterButton.zip, ExampleItems.zip, IntroSkipper.zip
          draft: true
          prerelease: false
  Pack_Nuget:
      name: Pack nuget
      needs: Update_Release
      runs-on: windows-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Get version
          id: version
          uses: notiz-dev/github-action-json-property@release
          with:
            path: Winch\mod_meta.json
            prop_path: Version
        - name: Set up nuget
          uses: NuGet/setup-nuget@v1.0.5
        - name: Pack nuget
          run: nuget pack package -OutputFileNamesWithoutVersion -OutputDirectory build -Properties "version=${{ steps.version.outputs.prop }};"

        - name: Publish nuget
          run: |
            nuget push "build/Winch.*.nupkg" -ApiKey ${{ secrets.NUGET_KEY }} -Source https://api.nuget.org/v3/index.json
                
